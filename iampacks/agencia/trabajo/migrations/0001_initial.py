# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-06 20:42
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('telefono', '__first__'),
        ('direccion', '__first__'),
        ('agencia', '0002_auto_20160306_2042'),
        ('cities_light', '0006_compensate_for_0003_bytestring_bug'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DireccionProductora',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(blank=True, max_length=60, null=True, verbose_name='Descripção')),
                ('barrio', models.CharField(blank=True, max_length=60, null=True, verbose_name='Barrio')),
                ('direccion', models.CharField(max_length=120, verbose_name='Endereço')),
                ('codigo_postal', models.CharField(blank=True, max_length=40, null=True, verbose_name='CEP')),
                ('ciudad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='direccion.Ciudad', verbose_name='Cidade')),
                ('estado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cities_light.Region', verbose_name='Estado')),
                ('pais', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cities_light.Country', verbose_name='Pais')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Endereços',
                'verbose_name': 'Endereço',
            },
        ),
        migrations.CreateModel(
            name='EventoRol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(blank=True, max_length=60, null=True, verbose_name='Descripção')),
                ('barrio', models.CharField(blank=True, max_length=60, null=True, verbose_name='Barrio')),
                ('direccion', models.CharField(max_length=120, verbose_name='Endereço')),
                ('codigo_postal', models.CharField(blank=True, max_length=40, null=True, verbose_name='CEP')),
                ('fecha', models.DateTimeField(blank=True, default=datetime.datetime(2016, 3, 6, 20, 42, 56, 773994), null=True, verbose_name='Data do evento')),
                ('tipo', models.CharField(choices=[('C', 'Casting'), ('B', 'Callback'), ('P', 'Proba de roupa'), ('R', 'Realização do trabalho'), ('O', 'Outro')], max_length=1)),
                ('ciudad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='direccion.Ciudad', verbose_name='Cidade')),
                ('estado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cities_light.Region', verbose_name='Estado')),
                ('pais', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cities_light.Country', verbose_name='Pais')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Eventos do perfil',
                'verbose_name': 'Evento do perfil',
            },
        ),
        migrations.CreateModel(
            name='EventoTrabajo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(blank=True, max_length=60, null=True, verbose_name='Descripção')),
                ('barrio', models.CharField(blank=True, max_length=60, null=True, verbose_name='Barrio')),
                ('direccion', models.CharField(max_length=120, verbose_name='Endereço')),
                ('codigo_postal', models.CharField(blank=True, max_length=40, null=True, verbose_name='CEP')),
                ('fecha', models.DateTimeField(blank=True, default=datetime.datetime(2016, 3, 6, 20, 42, 56, 773994), null=True, verbose_name='Data do evento')),
                ('tipo', models.CharField(choices=[('C', 'Casting'), ('B', 'Callback'), ('P', 'Proba de roupa'), ('R', 'Realização do trabalho'), ('O', 'Outro')], max_length=1)),
                ('ciudad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='direccion.Ciudad', verbose_name='Cidade')),
                ('estado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cities_light.Region', verbose_name='Estado')),
                ('pais', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='cities_light.Country', verbose_name='Pais')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Eventos do trabalho',
                'verbose_name': 'Evento do trabalho',
            },
        ),
        migrations.CreateModel(
            name='ItemPortfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, unique_for_date='fecha')),
                ('video', models.URLField(blank=True, null=True, unique=True)),
                ('codigo_video', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='trabajo/portfolio/')),
                ('fecha', models.DateField(default=datetime.date(2016, 3, 6), verbose_name='Data')),
            ],
            options={
                'ordering': ['-fecha'],
                'verbose_name_plural': 'Portfolio',
                'verbose_name': 'Item Portfolio',
            },
        ),
        migrations.CreateModel(
            name='Postulacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('PA', 'Postulação feita pelo agenciado'), ('PC', 'Postulado para casting'), ('RP', 'Postulacion a casting rechazada'), ('SC', 'Selecionado para casting'), ('RC', 'Seleccion a casting rechazada'), ('SK', 'Seleccionado para callback'), ('RK', 'Seleccion a callback rechazada'), ('ST', 'Selecionado para trabalho'), ('RT', 'Seleccion a trabajo rechazada'), ('TR', 'Trabalho realisado'), ('TN', 'Trabajo no realizado'), ('TP', 'Trabalho pagado')], default='PC', max_length=2)),
                ('agenciado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agencia.Agenciado')),
            ],
            options={
                'ordering': ['-rol__trabajo__fecha_ingreso', 'rol__descripcion', 'agenciado__nombre', 'agenciado__apellido'],
                'verbose_name_plural': 'Postulaçoes a trabalhos',
                'verbose_name': 'Postulação',
            },
        ),
        migrations.CreateModel(
            name='Productora',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=60, verbose_name='Nome')),
                ('mail', models.EmailField(max_length=254, verbose_name='e-mail')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='trabajo/productora/')),
                ('user', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nombre'],
                'verbose_name_plural': 'Produtoras',
                'verbose_name': 'Produtora',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=60, verbose_name='Descripção')),
                ('cache', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('caracteristicas', models.TextField(blank=True, null=True, verbose_name='Caraterísticas')),
            ],
            options={
                'ordering': ['-trabajo__fecha_ingreso', 'descripcion'],
                'verbose_name_plural': 'Perfis',
                'verbose_name': 'Perfil',
            },
        ),
        migrations.CreateModel(
            name='TelefonoProductora',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefono', models.CharField(max_length=60, verbose_name='Telefone')),
                ('compania', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='telefono.Compania', verbose_name='Compania')),
                ('productora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trabajo.Productora', verbose_name='Produtora')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Telefones',
                'verbose_name': 'Telefone',
            },
        ),
        migrations.CreateModel(
            name='Trabajo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, unique_for_date='fecha_ingreso')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripção')),
                ('imagen', models.ImageField(blank=True, upload_to='trabajo/trabajo/')),
                ('estado', models.CharField(choices=[('IN', 'Inicial'), ('AT', 'Ativo'), ('PC', 'Pendente de cobrar'), ('FI', 'Finalizado')], max_length=2)),
                ('fecha_ingreso', models.DateField(default=datetime.date(2016, 3, 6), verbose_name='Data ingreso')),
                ('publicado', models.BooleanField(default=True, help_text='Indica se o trabalho debe ser publicado no site da agencia', verbose_name='Publicado')),
                ('productora', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trabajo.Productora', verbose_name='Produtora')),
            ],
            options={
                'permissions': (('mail_productora', 'Envio de trabalho por e-mail a produtora'), ('mail_agenciados', 'Envio de trabalho por e-mail a agenciados')),
                'ordering': ['-fecha_ingreso'],
                'verbose_name_plural': 'Trabalhos',
                'verbose_name': 'Trabalho',
            },
        ),
        migrations.AddField(
            model_name='rol',
            name='trabajo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trabajo.Trabajo'),
        ),
        migrations.AddField(
            model_name='postulacion',
            name='rol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trabajo.Rol', verbose_name='Perfil'),
        ),
        migrations.AddField(
            model_name='eventotrabajo',
            name='trabajo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trabajo.Trabajo'),
        ),
        migrations.AddField(
            model_name='eventorol',
            name='rol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='trabajo.Rol', verbose_name='Perfil'),
        ),
        migrations.AddField(
            model_name='direccionproductora',
            name='productora',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trabajo.Productora', verbose_name='Produtora'),
        ),
        migrations.AlterUniqueTogether(
            name='rol',
            unique_together=set([('trabajo', 'descripcion')]),
        ),
        migrations.AlterUniqueTogether(
            name='postulacion',
            unique_together=set([('agenciado', 'rol')]),
        ),
    ]
